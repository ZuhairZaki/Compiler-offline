.MODEL SMALL

.STACK 100H

.DATA

NEWLINE DB 13, 10, '$'

;int a;
var0 DW ?

;int x;
; x WORD PTR[BP-2]

t0 DW ?
t1 DW ?
t2 DW ?

.CODE

; int fib(int n)

fib PROC
PUSH BP
MOV BP,SP

; fib(n-1)+fib(n-2)

MOV AX, WORD PTR[BP+4]
MOV t0, AX

MOV t1, 1

MOV AX, t0
SUB AX, t1
MOV t0, AX

; fib(n-1)

PUSH t0
CALL fib
MOV t0, AX

MOV AX, WORD PTR[BP+4]
MOV t1, AX

MOV t2, 2

MOV AX, t1
SUB AX, t2
MOV t1, AX

; fib(n-2)

PUSH t0
PUSH t1
CALL fib
POP t0
MOV t1, AX

MOV AX, t0
ADD AX, t1
MOV t0, AX

; return fib(n-1)+fib(n-2);

MOV AX, t0
JMP END_fib

END_fib:
POP BP
RET 2

fib ENDP

; int main()

main PROC
MOV AX,@DATA
MOV DS,AX

PUSH BP
MOV BP,SP

; a = 8

MOV t0, 8

MOV AX, t0
MOV var0, AX

; x = fib(a)

MOV AX, var0
MOV t0, AX

; fib(a)

SUB SP, 2
PUSH t0
CALL fib
MOV SP, BP
MOV t0, AX

MOV AX, t0
MOV WORD PTR[BP-2], AX

SUB SP, 2
PUSH var0
CALL printf
MOV SP, BP

END_main:
POP BP
MOV AH,4CH
INT 21H

main ENDP

; printf function

printf PROC

PUSH BP
MOV BP, SP

XOR CX, CX
MOV BX, 10

MOV AX, WORD PTR[BP+4]
CMP AX, 0
JGE GET_DIGITS
PUSH AX
MOV AH, 2
MOV DL, '-'
INT 21H
POP AX
NEG AX
GET_DIGITS:
XOR DX, DX
DIV BX
PUSH DX
INC CX
CMP AX, 0
JNE GET_DIGITS
MOV AH, 2
PRINT_DIGITS:
POP DX
ADD DL, 30H
INT 21H
LOOP PRINT_DIGITS
MOV AH, 9
LEA DX, NEWLINE
INT 21H
POP BP
RET 2

printf ENDP

END MAIN