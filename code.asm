.MODEL SMALL

.STACK 100H

.DATA

NEWLINE DB 13, 10, '$'

;int x;

;int a,b;

t0 DW ?
t1 DW ?

.CODE

; int f(int a)

f PROC
; 2*a

MOV t0, 2

MOV AX, WORD PTR[BP+4]
MOV t1, AX

MOV AX, t0
IMUL t1
MOV t0, AX

; return 2*a;

MOV AX, t0
JMP END_f

; a = 9

MOV t0, 9

MOV AX, t0
MOV WORD PTR[BP+4], AX

END_f:
POP BP
RET 2

f ENDP

; int g(int a,int b)

g PROC
; x = f(a)+a+b

MOV AX, WORD PTR[BP+6]
MOV t0, AX

; f(a)

SUB SP, 2
PUSH t0
CALL f
MOV SP, BP
MOV t0, AX

MOV AX, WORD PTR[BP+6]
MOV t1, AX

MOV AX, t0
ADD AX, t1
MOV t0, AX

MOV AX, WORD PTR[BP+4]
MOV t1, AX

MOV AX, t0
ADD AX, t1
MOV t0, AX

MOV AX, t0
MOV WORD PTR[BP-2], AX

; x

MOV AX, WORD PTR[BP-2]
MOV t0, AX

; return x;

MOV AX, t0
JMP END_g

END_g:
POP BP
RET 3

g ENDP

; int main()

main PROC
MOV AX,@DATA
MOV DS,AX

PUSH BP
MOV BP,SP

; a = 1

MOV t0, 1

MOV AX, t0
MOV WORD PTR[BP-2], AX

; b = 2

MOV t0, 2

MOV AX, t0
MOV WORD PTR[BP-4], AX

; a = g(a,b)

MOV AX, WORD PTR[BP-2]
MOV t0, AX

MOV AX, WORD PTR[BP-4]
MOV t1, AX

; g(a,b)

SUB SP, 4
PUSH t0
PUSH t1
CALL g
MOV SP, BP
MOV t0, AX

MOV AX, t0
MOV WORD PTR[BP-2], AX

SUB SP, 4
PUSH WORD PTR[BP-2]
CALL printf
MOV SP, BP

; 0

MOV t0, 0

; return 0;

MOV AX, t0
JMP END_main

END_main:
POP BP
MOV AH,4CH
INT 21H

main ENDP

; printf function

printf PROC

PUSH BP
MOV BP, SP

XOR CX, CX
MOV BX, 10

MOV AX, WORD PTR[BP+4]
CMP AX, 0
JGE GET_DIGITS
PUSH AX
MOV AH, 2
MOV DL, '-'
INT 21H
POP AX
NEG AX
GET_DIGITS:
XOR DX, DX
DIV BX
PUSH DX
INC CX
CMP AX, 0
JNE GET_DIGITS
MOV AH, 2
PRINT_DIGITS:
POP DX
ADD DL, 30H
INT 21H
LOOP PRINT_DIGITS
MOV AH, 9
LEA DX, NEWLINE
INT 21H
POP BP
RET 2

printf ENDP

END MAIN