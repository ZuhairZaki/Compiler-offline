.MODEL SMALL

.STACK 100H

.DATA

NEWLINE DB 13, 10, '$'

;int a,b,c,i;
; a WORD PTR[BP-2]
; b WORD PTR[BP-4]
; c WORD PTR[BP-6]
; i WORD PTR[BP-8]

t0 DW ?
t1 DW ?
t2 DW ?
t3 DW ?
t4 DW ?

.CODE

; int main()

main PROC
MOV AX,@DATA
MOV DS,AX

PUSH BP
MOV BP,SP

; b = 0

MOV t0, 0

MOV AX, t0
MOV WORD PTR[BP-4], AX

; c = 1

MOV t0, 1

MOV AX, t0
MOV WORD PTR[BP-6], AX

; i = 0

MOV t0, 0

MOV AX, t0
MOV WORD PTR[BP-8], AX

; for(i = 0;i<4;i++)

JMP L4
L5:
; a = 3

MOV t3, 3

MOV AX, t3
MOV WORD PTR[BP-2], AX

; while(a--)

JMP L2
L3:
; b++

MOV AX, WORD PTR[BP-4]

ADD WORD PTR[BP-4], 1
MOV t4, AX

L2:
; a--

MOV AX, WORD PTR[BP-2]

SUB WORD PTR[BP-2], 1
MOV t3, AX

CMP t3, 0
JNE L3

; i++

MOV AX, WORD PTR[BP-8]

ADD WORD PTR[BP-8], 1
MOV t2, AX

L4:
; i<4

MOV AX, WORD PTR[BP-8]
MOV t1, AX

MOV t2, 4

MOV AX, t1
CMP AX, t2
JL L0
MOV t1, 0
JMP L1
L0:
MOV t1, 1
L1:

CMP t1, 0
JNE L5

; printf(a);

SUB SP, 8
PUSH WORD PTR[BP-2]
CALL printf
MOV SP, BP

; printf(b);

SUB SP, 8
PUSH WORD PTR[BP-4]
CALL printf
MOV SP, BP

; printf(c);

SUB SP, 8
PUSH WORD PTR[BP-6]
CALL printf
MOV SP, BP

END_main:
POP BP
MOV AH,4CH
INT 21H

main ENDP

; printf function

printf PROC

PUSH BP
MOV BP, SP

XOR CX, CX
MOV BX, 10

MOV AX, WORD PTR[BP+4]
CMP AX, 0
JGE GET_DIGITS
PUSH AX
MOV AH, 2
MOV DL, '-'
INT 21H
POP AX
NEG AX
GET_DIGITS:
XOR DX, DX
DIV BX
PUSH DX
INC CX
CMP AX, 0
JNE GET_DIGITS
MOV AH, 2
PRINT_DIGITS:
POP DX
ADD DL, 30H
INT 21H
LOOP PRINT_DIGITS
MOV AH, 9
LEA DX, NEWLINE
INT 21H
POP BP
RET 2

printf ENDP

END MAIN
